import 'package:flutter/material.dart';
import 'package:library_ms/LibraryService.dart';
import 'package:library_ms/Models/memberModel.dart';

class CreateMemberPage extends StatefulWidget {
  @override
  _CreateMemberPageState createState() => _CreateMemberPageState();
}

class _CreateMemberPageState extends State<CreateMemberPage> {
  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _addressController = TextEditingController();
  final TextEditingController _phoneController = TextEditingController();

  Future<void> _createMember() async {
    String name = _nameController.text.trim();
    String email = _emailController.text.trim();
    String address = _addressController.text.trim();
    String phone = _phoneController.text.trim();

    if (name.isNotEmpty && email.isNotEmpty && address.isNotEmpty && phone.isNotEmpty) {
      Member newMember = Member(
        id: '', // The ID will be generated by the server
        name: name,
        email: email,
        address: address,
        phone: phone,

        membershipStatus: 'Active', // Set initial membership status
      );

      try {
        await LibraryService().createMember(newMember);
        // Navigate back to the previous page
        Navigator.pop(context);
      } catch (e) {
        // Handle error
        showDialog(
          context: context,
          builder: (context) => AlertDialog(
            title: Text('Error'),
            content: Text('Failed to create member: $e'),
            actions: [
              TextButton(
                onPressed: () {
                  Navigator.pop(context); // Close the dialog
                },
                child: Text('OK'),
              ),
            ],
          ),
        );
      }
    } else {
      // Show error message if any field is empty
      showDialog(
        context: context,
        builder: (context) => AlertDialog(
          title: Text('Error'),
          content: Text('Please fill in all fields.'),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.pop(context); // Close the dialog
              },
              child: Text('OK'),
            ),
          ],
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
 appBar:  AppBar(
        backgroundColor: Color(0xFFDFC0A0),
        title: Text(
          'Create Member',
          style: TextStyle(
              fontFamily: "Det",
              color: Color(0xff704929),
              fontWeight: FontWeight.bold),
        ),
      ),
      body: Container(
             height: double.infinity,
        width: double.infinity,
                decoration: BoxDecoration(
          image: DecorationImage(
              image: AssetImage("assets/images/n3.jpg"), fit: BoxFit.cover),),
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(16.0),
          child: Column(
           mainAxisAlignment: MainAxisAlignment.center,
            children: [
 Container(        margin: EdgeInsets.all(1),
                padding: EdgeInsets.all( 15),
                decoration:   BoxDecoration(borderRadius: BorderRadius.only(topLeft: Radius.circular(50),bottomRight: Radius.circular(50)),gradient: LinearGradient(colors: [ Color(0xFFBD7B46),
                  Color(0xFFDFC0A0), ],begin: Alignment.bottomLeft,
                  end: Alignment.bottomRight,)),
                child: TextField(
                controller: _nameController,
                decoration: InputDecoration(labelText: 'Name'),
                ),
              ),   SizedBox(height: 5,),
 Container(        margin: EdgeInsets.all(1),
                padding: EdgeInsets.all( 15),
                decoration:   BoxDecoration(borderRadius: BorderRadius.only(topLeft: Radius.circular(50),bottomRight: Radius.circular(50)),gradient: LinearGradient(colors: [ Color(0xFFBD7B46),
                  Color(0xFFDFC0A0), ],begin: Alignment.bottomLeft,
                  end: Alignment.bottomRight,)),
                child: TextField(
                controller: _emailController,
                decoration: InputDecoration(labelText: 'Email'),
                ),
              ),   SizedBox(height: 5,),
 Container(        margin: EdgeInsets.all(1),
                padding: EdgeInsets.all( 15),
                decoration:   BoxDecoration(borderRadius: BorderRadius.only(topLeft: Radius.circular(50),bottomRight: Radius.circular(50)),gradient: LinearGradient(colors: [ Color(0xFFBD7B46),
                  Color(0xFFDFC0A0), ],begin: Alignment.bottomLeft,
                  end: Alignment.bottomRight,)),
                child: TextField(
                controller: _addressController,
                decoration: InputDecoration(labelText: 'Address'),
                ),
              ),   SizedBox(height: 5,),
 Container(        margin: EdgeInsets.all(1),
                padding: EdgeInsets.all( 15),
                decoration:   BoxDecoration(borderRadius: BorderRadius.only(topLeft: Radius.circular(50),bottomRight: Radius.circular(50)),gradient: LinearGradient(colors: [ Color(0xFFBD7B46),
                  Color(0xFFDFC0A0), ],begin: Alignment.bottomLeft,
                  end: Alignment.bottomRight,)),
                child: TextField(
                controller: _phoneController,
                decoration: InputDecoration(labelText: 'Phone'),
                ),
              ),   SizedBox(height: 5,),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _createMember,
                child: Text('Create Member'),
              ),
            ],
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    // Clean up controllers when the widget is disposed
    _nameController.dispose();
    _emailController.dispose();
    _addressController.dispose();
    _phoneController.dispose();
    super.dispose();
  }
}
